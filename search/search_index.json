{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Life Adventurer's Wiki","text":""},{"location":"blog/","title":"Blog","text":""},{"location":"blog/2024/11/11/always-check-disk-space-before-installing-dependencies/","title":"Always Check Disk Space Before Installing Dependencies!","text":"<p>Recently, I had a nerve-wracking experience with my server. I was in the middle of installing some new dependencies when things suddenly went south. The installation process was running smoothly\u2014until it wasn\u2019t. Without realizing it, I\u2019d maxed out my server\u2019s disk usage. As a result, I couldn\u2019t even SSH into the server to see what went wrong or free up some space. Eventually, I had no choice but to reboot the server to get back in.</p> <p>This experience was a big reminder that disk space isn\u2019t just something to keep an eye on occasionally. It\u2019s a critical factor to check before installing anything new on a server. Running out of disk space can cause unexpected downtimes, prevent crucial services from running, and in some cases, even make SSH inaccessible\u2014as I learned the hard way.</p> <p>On the bright side, I discovered a handy tool called <code>ncdu</code>! It's a disk usage analyzer that makes it easy to visualize disk usage and pinpoint files or directories hogging the most space. With <code>ncdu</code>, you can scan a directory and quickly find unnecessary files or large logs to delete.</p>"},{"location":"blog/2024/11/11/always-check-disk-space-before-installing-dependencies/#key-takeaways","title":"Key Takeaways","text":"<ol> <li> <p>Always check disk usage \u2013 Before installing dependencies or running any    operations that might consume space, run a quick check on available disk    space using commands like <code>df -h</code>, <code>du</code>, or <code>ncdu</code>.</p> </li> <li> <p>Monitor disk usage regularly \u2013 Set up alerts or monitoring tools to    notify you when disk usage reaches a critical level.</p> </li> <li> <p>Keep a buffer of free space \u2013 Aim to keep a reasonable percentage of disk    space free. This way, even if your application needs to expand temporarily,    you\u2019ll have room.</p> </li> <li> <p>Schedule maintenance \u2013 Regularly remove unnecessary files, logs, and    outdated dependencies to keep your server\u2019s storage under control.</p> </li> </ol> <p>It\u2019s easy to overlook disk space until it\u2019s too late, but with these steps in place, you can avoid disruptions and maintain smoother operations on your server. A little proactive monitoring goes a long way!</p>"},{"location":"blog/2024/03/08/first-post/","title":"First Post","text":"<p>This is the first post of my new blog!</p> <p>My old blog is here.</p>"},{"location":"portfolio/","title":"Portfolio Overview","text":"<p>Welcome to my portfolio! Here you'll find a collection of my projects showcasing various technologies and solutions.</p>"},{"location":"portfolio/#featured-projects","title":"Featured Projects","text":""},{"location":"portfolio/#sharacle","title":"Sharacle","text":"<p>Faith &amp; Community Platform</p> <p>Share your daily miracles - a miracles sharing and cherish platform designed to remove social media anxiety.</p> <p>Website: sharacle.com</p> <p>Note: This is a private repository with a public website for sharing and cherishing daily miracles.</p>"},{"location":"portfolio/#patient-intakeoutput-recorder","title":"Patient Intake/Output Recorder","text":"<p>Healthcare Tool</p> <p>A comprehensive tool for healthcare professionals to monitor patients' health parameters efficiently.</p>"},{"location":"portfolio/#sentify","title":"Sentify","text":"<p>Financial Analysis</p> <p>Leveraging Sentiment Analysis on News for Stock Market Insights.</p> <p>Technology: Advanced sentiment analysis algorithms applied to financial news to provide market insights and trading signals.</p>"},{"location":"portfolio/#omnitext","title":"OmniText","text":"<p>Accessibility App</p> <p>A zero-build, client-side phrase board app built with plain HTML, CSS, and JavaScript.</p> <p>Purpose: Designed for people who have difficulty speaking (e.g., when they are sick), OmniText allows you to save your favorite words or sentences and display them instantly in full screen for quick and easy communication.</p>"},{"location":"portfolio/#additional-projects","title":"Additional Projects","text":""},{"location":"portfolio/#typing-contest-discord-bot","title":"Typing Contest Discord Bot","text":"<p>Discord Bot</p> <p>A Discord bot built with discord.py to facilitate typing contests in servers with real-time competition features.</p>"},{"location":"portfolio/#permission-tree","title":"Permission Tree","text":"<p>Permission Management</p> <p>A hierarchical tree structure that manages permissions and allows moving subtrees with role-based access control.</p>"},{"location":"portfolio/#mkdocs-material-template","title":"Mkdocs Material Template","text":"<p>Documentation Template</p> <p>A professional template using MkDocs with the Material theme to create elegant, responsive, and well-structured documentation.</p>"},{"location":"portfolio/mkdocs-material-template/","title":"A Material for MkDocs Documentation Template","text":"<p>This template uses MkDocs with the Material theme to create elegant, responsive, and well-structured documentation for your projects.</p>"},{"location":"portfolio/mkdocs-material-template/#getting-started","title":"Getting Started","text":"<p>This repository is a template repository. You can create your repository by clicking the <code>Use this template</code> button on the upper right corner.</p>"},{"location":"portfolio/mkdocs-material-template/#prerequisites","title":"Prerequisites","text":"<p>Before you begin, make sure you have the following installed:</p> <ul> <li>Python (version 3.8 or higher)</li> <li>Poetry (recommended)</li> <li>or pip</li> </ul>"},{"location":"portfolio/mkdocs-material-template/#installation","title":"Installation","text":""},{"location":"portfolio/mkdocs-material-template/#using-poetry-recommended","title":"Using Poetry (recommended)","text":"<ol> <li>Clone the repository:    <pre><code>git clone https://github.com/&lt;username&gt;/&lt;repo-name&gt;.git\ncd &lt;repo-name&gt;\n</code></pre></li> <li>Install dependencies:    <pre><code>poetry install\n</code></pre></li> <li>Activate the virtual environment:    <pre><code>poetry shell\n</code></pre></li> </ol>"},{"location":"portfolio/mkdocs-material-template/#using-pip","title":"Using pip","text":"<ol> <li>Clone the repository:    <pre><code>git clone https://github.com/&lt;username&gt;/&lt;repo-name&gt;.git\ncd &lt;repo-name&gt;\n</code></pre></li> <li>Create and activate a virtual environment:    <pre><code>python -m venv venv\nsource venv/bin/activate # On Windows use `venv\\Scripts\\activate`\n</code></pre></li> <li>Install dependencies:    <pre><code>pip install -r requirements.txt\n</code></pre></li> </ol>"},{"location":"portfolio/mkdocs-material-template/#usage","title":"Usage","text":"<ol> <li> <p>Preview the documentation:    <pre><code>mkdocs serve\n</code></pre>    Your documentation site will be available at <code>https://localhost:8000/</code>.</p> </li> <li> <p>Build the documentation for deployment:    <pre><code>mkdocs build\n</code></pre>    The static site will be generated in the <code>site</code> directory.</p> </li> <li>Deploy to GitHub Pages:    <pre><code>mkdocs gh-deploy\n</code></pre>    This command will deploy your site to the <code>gh-pages</code> branch of your    repository and make it available on GitHub Pages.</li> </ol>"},{"location":"portfolio/mkdocs-material-template/#configuration","title":"Configuration","text":"<p>Configure your documentation by editing the <code>mkdocs.yml</code> file. This file contains various settings such as theme, extension, and navigation structure. For more information, refer to the Material for MkDocs Documentation</p>"},{"location":"portfolio/mkdocs-material-template/#acknowledgements","title":"Acknowledgements","text":"<p>This template is built using the following open-source projects:</p> <ul> <li>MkDocs: A fast, simple and downright   gorgeous static site generator that's geared towards building project   documentation.</li> <li>Material for MkDocs: A   Material Design theme for MkDocs, created by Martin Donath (Squidfunk).</li> </ul>"},{"location":"portfolio/mkdocs-material-template/#license","title":"LICENSE","text":"<p>This project is licensed under the MIT License - see the LICENSE file for details.</p>"},{"location":"portfolio/moonafly/","title":"Moonafly","text":"<p>Moonafly is a discord bot with a lot useful features.</p>"},{"location":"portfolio/moonafly/#documentation","title":"Documentation","text":"<p>For detailed information on Moonafly's commands and features, refer to documentation</p>"},{"location":"portfolio/omnitext/","title":"OmniText","text":"<p>Accessibility App</p> <p>A zero-build, client-side phrase board app built with plain HTML, CSS, and JavaScript.</p>"},{"location":"portfolio/omnitext/#website","title":"Website","text":"<p>Live Application</p> <p>Try OmniText at https://lifeadventurer.github.io/OmniText/</p>"},{"location":"portfolio/omnitext/#overview","title":"Overview","text":"<p>Designed for people who have difficulty speaking (e.g., when they are sick), OmniText allows you to save your favorite words or sentences and display them instantly in full screen for quick and easy communication.</p> <p>Privacy First</p> <p>All your data stays on your device! OmniText uses browser localStorage, meaning your phrases are stored locally and never sent to any server. Your privacy is guaranteed.</p>"},{"location":"portfolio/omnitext/#features","title":"Features","text":"<p>Key Features</p> <ul> <li>Zero Build Process: No complex build tools or frameworks needed. Just   plain HTML, CSS (via Tailwind CDN and inline styles), and JavaScript.</li> <li>100% Client-Side: Runs entirely in the user's browser with no server   dependencies.</li> <li>Complete Privacy: All data stored locally in your browser's   <code>localStorage</code> - nothing is ever sent to external servers.</li> <li>Full-Screen Display: Tap a saved phrase to display it prominently in   full screen, making it easy for others to read.</li> <li>Optional Sorting by Usage: Enable or disable sorting phrases based on how   frequently they are used.</li> <li>Optional Usage Display: Show or hide the usage count for each phrase.</li> <li>Progressive Web App (PWA):<ul> <li>Installable: Add OmniText to your device's home screen for quick   access, just like a native app.</li> <li>Offline Support: Thanks to the Service Worker, the core   application assets are cached, allowing you to access and use your   saved phrases even without an internet connection.</li> </ul> </li> <li>Responsive Design: Adapts to various screen sizes, from mobile phones   to desktops.</li> </ul>"},{"location":"portfolio/omnitext/#technology-stack","title":"Technology Stack","text":"<ul> <li>Frontend: Plain HTML, CSS, JavaScript</li> <li>Styling: Tailwind CSS (via CDN) and inline styles</li> <li>Storage: Browser localStorage (100% client-side)</li> <li>PWA Features: Service Worker for offline support</li> <li>Deployment: Static hosting on GitHub Pages</li> </ul>"},{"location":"portfolio/omnitext/#how-to-use","title":"How to Use","text":"<p>Step-by-Step Guide</p> <ol> <li>Enter a phrase or sentence into the text input field.</li> <li>Click \"Add Text\" or press Enter to save the phrase.</li> <li>Saved phrases appear below as buttons.</li> <li>Click any saved phrase button to display it in full screen.</li> <li>Tap anywhere on the full-screen display to dismiss it.</li> <li>Click the \"\u2715\" button next to a phrase to delete it (requires confirmation).</li> <li>Click the \"Clear All Phrases\" button to remove all saved phrases (requires    confirmation).</li> <li>Toggle Sort by usage to order phrases by frequency instead of insertion    order.</li> <li>Toggle Show usage to display or hide the usage count badges.</li> </ol>"},{"location":"portfolio/omnitext/#use-cases","title":"Use Cases","text":"<p>Perfect For</p> <ul> <li>People with temporary speech difficulties</li> <li>Healthcare communication</li> <li>Accessibility support</li> <li>Emergency communication</li> <li>Language learning and practice</li> <li>Situations requiring quick, clear communication</li> </ul>"},{"location":"portfolio/omnitext/#project-goals","title":"Project Goals","text":"<p>The primary goal of OmniText is to provide a simple, reliable, and Accessibility communication tool that requires no technical setup or internet connection once loaded. It's designed to be immediately usable by anyone who needs to communicate through text display.</p> <p>Privacy &amp; Security</p> <ul> <li>No Server Required: Everything runs in your browser</li> <li>No Data Collection: Your phrases never leave your device</li> <li>No Tracking: No analytics or user tracking</li> <li>Complete Control: You own and control all your data</li> </ul>"},{"location":"portfolio/omnitext/#development-philosophy","title":"Development Philosophy","text":"<ul> <li>Simplicity: No complex frameworks or dependencies</li> <li>Accessibility: Designed with universal access in mind</li> <li>Reliability: Works offline and across different browsers</li> <li>Ease of Use: Intuitive interface requiring minimal learning</li> <li>Privacy: All data stays local to your device - no external dependencies</li> <li>Performance: Fast loading and responsive interactions</li> </ul>"},{"location":"portfolio/patient-intake-output-recorder/","title":"Patient Intake/Output Recorder","text":"Patient Intake/Output (I/O) Recorder Install   \u00b7   Configure   \u00b7   Docs <p>This project is a simple tool for recording and tracking essential health parameters of patients. It provides a user-friendly interface for healthcare professionals to log various health metrics, including food intake, water consumption, urine volume, defecation frequency, and weight, along with corresponding timestamps for each entry. This information can be valuable for healthcare professionals to monitor and analyze the health status of patients over time.</p> <p>Uses Poetry for dependency management and includes, ruff and pre-commit for linting and formatting.</p>"},{"location":"portfolio/patient-intake-output-recorder/#importance-for-kidney-disease-management","title":"Importance for Kidney Disease Management","text":"<p>In particular, it plays a crucial role in managing conditions such as kidney disease, where strict control over water intake is essential for maintaining health and preventing complications.</p>"},{"location":"portfolio/patient-intake-output-recorder/#getting-started","title":"Getting Started","text":"<p>This guide will walk you through setting up the Patient Intake/Output Recorder (PIOR) project. Follow the steps below to install dependencies, configure settings, and start the server.</p>"},{"location":"portfolio/patient-intake-output-recorder/#installation","title":"Installation","text":""},{"location":"portfolio/patient-intake-output-recorder/#install-dependencies","title":"Install Dependencies","text":"<p>Patient Intake Output Recorder can be set up with either Poetry (recommended) or pip. Open a terminal in the project directory and install the dependencies:</p> Using PoetryUsing pip <pre><code>poetry install\n</code></pre> <pre><code>pip install -r requirements.txt\n</code></pre> <p>Note</p> <p>Poetry is recommended as it simplifies version management and ensures reproducible builds.</p>"},{"location":"portfolio/patient-intake-output-recorder/#configuration","title":"Configuration","text":""},{"location":"portfolio/patient-intake-output-recorder/#backend","title":"Backend","text":"<ol> <li>In the <code>backend</code> directory, create a new <code>config.json</code> file.</li> <li>Replace <code>{your_token_here}</code> and <code>{your_api_url_here}</code> with your actual token    and API URL.</li> </ol> <p>Example content:</p> backend/config.json<pre><code>{\n  \"token\": \"{your_token_here}\",\n  \"api_url\": \"{your_api_url_here}\"\n}\n</code></pre>"},{"location":"portfolio/patient-intake-output-recorder/#frontend-patient","title":"Frontend (Patient)","text":"<ol> <li>In the <code>patient</code> directory, create a new <code>config.json</code> file.</li> <li>Replace <code>{your_api_url_here}</code> with your actual API URL.</li> </ol> <p>Example content:</p> patient/config.json<pre><code>{\n  \"apiUrl\": \"{your_api_url_here}\"\n}\n</code></pre>"},{"location":"portfolio/patient-intake-output-recorder/#frontend-monitor","title":"Frontend (Monitor)","text":"<ol> <li>In the <code>monitor</code> directory, create a new <code>config.json</code> file.</li> <li>Replace <code>{your_api_url_here}</code> and <code>{your_web_url_here}</code> with your actual API    URL and web URL.</li> </ol> <p>Example content:</p> monitor/config.json<pre><code>{\n  \"apiUrl\": \"{your_api_url_here}\",\n  \"webUrl\": \"{your_web_url_here}\"\n}\n</code></pre>"},{"location":"portfolio/patient-intake-output-recorder/#running-the-server","title":"Running the server","text":"<p>Once installed and configured, you can start the server with Uvicorn.</p> Using PoetryUsing Python <pre><code>poetry run uvicorn main:app --reload\n</code></pre> <pre><code>python -m uvicorn main:app --reload\n</code></pre> <p>This command launches the server with hot-reloading enabled, which automatically restarts the server upon code changes. With these steps completed, your server should be up and running, ready to handle requests.</p>"},{"location":"portfolio/patient-intake-output-recorder/#want-to-contribute","title":"Want to Contribute?","text":"<p>Refer to CONTRIBUTING.md</p>"},{"location":"portfolio/patient-intake-output-recorder/#license","title":"License","text":"<p>This project is licensed under the GNU General Public License v3.0 (GPL-3.0). See the LICENSE for more information.</p>"},{"location":"portfolio/permission-tree/","title":"Permission Tree","text":"<p>A tree structure that manages permissions and allows moving subtrees. This project implements a simple permission tree where each node can be public or private. When a public subtree is moved to a private node, the entire subtree becomes private.</p>"},{"location":"portfolio/permission-tree/#features","title":"Features","text":"<ul> <li>Create and manage a tree structure.</li> <li>Add nodes with customizable permissions (public/private).</li> <li>Move subtrees while maintaining permission rules.</li> <li>Inherit permissions from parent nodes.</li> </ul>"},{"location":"portfolio/permission-tree/#getting-started","title":"Getting Started","text":""},{"location":"portfolio/permission-tree/#prerequisites","title":"Prerequisites","text":"<p>Ensure you have Rust installed on your machine. You can install it using <code>rustup</code>:</p> <pre><code>curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n</code></pre>"},{"location":"portfolio/permission-tree/#installation","title":"Installation","text":"<p>To use the <code>permission-tree</code> library in your project, add it as a dependency in your <code>Cargo.toml</code> file:</p> <pre><code>[dependencies]\npermission_tree = { git = \"https://github.com/LifeAdventurer/permission-tree.git\" }\n</code></pre>"},{"location":"portfolio/permission-tree/#usage","title":"Usage","text":"<p>Here's a quick example of how to use the <code>permission_tree</code> in your code:</p> <pre><code>use permission_tree::{Permission, Tree};\n\nfn main() {\n    let mut tree = Tree::new();\n\n    // Adding nodes with permission\n    tree.add_node(1, Permission::Public); // root node\n    tree.add_node(2, Permission::Public);\n    tree.add_node(3, Permission::Private);\n    tree.add_node(4, Permission::Public);\n    tree.add_node(5, Permission::Public);\n\n    // Connecting nodes\n    tree.connect_nodes(1, 2);\n    tree.connect_nodes(1, 3);\n    tree.connect_nodes(2, 4);\n    tree.connect_nodes(2, 5);\n\n    println!(\"Initial tree:\");\n    tree.print_tree(1, 0);\n\n    // Moving a public subtree (node 2 and its children) to a private node (node 3))\n    tree.move_subtree(2, 3);\n\n    println!(\"Tree after moving subtree rooted at node 2 under node 3:\");\n    println!(\"{}\", tree.print_tree(1, 0));\n}\n</code></pre>"},{"location":"portfolio/permission-tree/#running-tests","title":"Running Tests","text":"<p>To run tests for the <code>permission_tree</code> library, use:</p> <pre><code>cargo test\n</code></pre>"},{"location":"portfolio/permission-tree/#license","title":"License","text":"<p>This project is licensed under the GNU General Public License v3.0 (GPL-3.0). See the <code>LICENSE</code> file for more details.</p>"},{"location":"portfolio/sentify/","title":"Sentify","text":"<p>Financial Analysis</p> <p>Leveraging Sentiment Analysis on News for Stock Market Insights.</p>"},{"location":"portfolio/sentify/#overview","title":"Overview","text":"<p>This project focuses on analyzing the sentiment of news articles to predict stock trends. It features a Flask-based web application designed to provide real-time financial data analysis and sentiment tracking.</p>"},{"location":"portfolio/sentify/#how-it-works","title":"How It Works","text":"<p>Analysis Process</p> <ul> <li>Input: Users can enter a company name or ticker symbol to retrieve relevant news articles.</li> <li>Process: Each news article is analyzed for sentiment, with scores generated to gauge the article's impact on stock trends.</li> <li>Output: The application delivers actionable insights and confidence indices based on the sentiment analysis, helping investors make informed decisions about their investments.</li> </ul>"},{"location":"portfolio/sentify/#features","title":"Features","text":"<p>Key Capabilities</p> <ul> <li>Real-time Sentiment Analysis: Process news articles as they are published</li> <li>Market Correlation: Link sentiment scores to market movements</li> <li>Trading Signals: Generate buy/sell recommendations based on sentiment</li> <li>News Aggregation: Collect and analyze news from multiple sources</li> <li>Historical Analysis: Track sentiment trends over time</li> <li>Web Interface: Flask-based application for easy access</li> </ul>"},{"location":"portfolio/sentify/#technology-stack","title":"Technology Stack","text":"<ul> <li>Backend: Flask web application</li> <li>Language: Python 3.11+</li> <li>Data Processing: Natural Language Processing (NLP)</li> <li>News Sources: Financial news APIs</li> <li>Analysis: Machine learning models for sentiment classification</li> <li>Deployment: Local development server</li> </ul>"},{"location":"portfolio/sentify/#installation-setup","title":"Installation &amp; Setup","text":"<p>Prerequisites</p> <ul> <li>Python (version 3.11 or higher)</li> <li>uv (recommended) or pip</li> </ul>"},{"location":"portfolio/sentify/#using-uv-recommended","title":"Using uv (recommended)","text":"<pre><code>git clone https://github.com/LifeAdventurer/sentify.git\ncd sentify\nuv sync\nsource .venv/bin/activate  # On Windows use `.venv\\Scripts\\activate`\n</code></pre>"},{"location":"portfolio/sentify/#using-pip","title":"Using pip","text":"<pre><code>git clone https://github.com/LifeAdventurer/sentify.git\ncd sentify\npython -m venv venv\nsource venv/bin/activate  # On Windows use `venv\\Scripts\\activate`\npip install -r requirements.txt\n</code></pre>"},{"location":"portfolio/sentify/#usage","title":"Usage","text":"<p>To serve the Flask app locally, run:</p> <pre><code>python3 src/main.py\n</code></pre>"},{"location":"portfolio/sentify/#configuration","title":"Configuration","text":"<p>The application can be configured by updating the <code>config.py</code> file in the <code>src/config</code> directory:</p> <p>Key Configuration Parameters</p> <ul> <li>TOP_COMPANIES_COUNT: Number of top companies ranked by market cap to search (default: 10000)</li> <li>TIMESTAMP_FORMAT: Format for timestamps used in the application (default: \"%Y-%m-%dT%H:%M:%SZ\")</li> <li>UTC_DIFFERENCE: Difference in hours between local time and UTC (default: 8)</li> <li>MAX_NEWS_LOOKBACK_DAYS: Maximum days to look back when fetching news (default: 60)</li> <li>CPU_COUNT: Number of CPUs used for multiprocessing (default: 2)</li> </ul>"},{"location":"portfolio/sentify/#use-cases","title":"Use Cases","text":"<p>Perfect For</p> <ul> <li>Individual Investors: Make data-driven investment decisions</li> <li>Trading Firms: Enhance algorithmic trading strategies</li> <li>Financial Analysts: Supplement traditional analysis methods</li> <li>Market Researchers: Understand market sentiment trends</li> <li>Risk Management: Identify potential market volatility</li> </ul>"},{"location":"portfolio/sentify/#repository","title":"Repository","text":"<p>Source Code</p> <p>View the project on GitHub</p>"},{"location":"portfolio/sentify/#license","title":"License","text":"<p>This project is licensed under the GNU General Public License v3.0 - see the LICENSE file for details.</p>"},{"location":"portfolio/sharacle/","title":"Sharacle","text":"<p>Faith &amp; Community Platform</p> <p>Share your daily miracles - a miracles sharing and cherish platform designed to remove social media anxiety.</p>"},{"location":"portfolio/sharacle/#overview","title":"Overview","text":"<p>Sharacle is a specially designed platform for sharing and cherishing daily miracles that aims to remove any factor that causes social media anxiety. Unlike traditional social media, Sharacle focuses purely on positive, faith-building content without the stress-inducing elements that plague other platforms.</p>"},{"location":"portfolio/sharacle/#mission","title":"Mission","text":"<p>Our Mission</p> <p>To create a safe, anxiety-free space where people can celebrate life's beautiful moments and encourage faith, especially for those going through tough times.</p>"},{"location":"portfolio/sharacle/#core-philosophy","title":"Core Philosophy","text":"<p>Anti-Anxiety Design</p> <p>Sharacle is built on the principle that social media should uplift, not stress. We've removed every element that typically causes anxiety in social platforms.</p>"},{"location":"portfolio/sharacle/#features-benefits","title":"Features &amp; Benefits","text":"<p>Anxiety-Free Design</p> <ul> <li>Miracle Sharing: Post and share your daily miracles with pure text content</li> <li>No Comments: Eliminates comparison and judgment anxiety</li> <li>No Followers/Following Counts: Removes social pressure and popularity contests</li> <li>No Algorithm-Based Recommendations: Content isn't promoted by popularity</li> <li>Text-Only Content: Focus on the message, not visual perfection</li> <li>Faith-Centered: Designed to encourage spiritual growth and hope</li> <li>Simple Interface: No complex features to navigate</li> <li>Mobile Responsive: Access from any device</li> </ul>"},{"location":"portfolio/sharacle/#target-audience","title":"Target Audience","text":"<p>Perfect For</p> <ul> <li>People Going Through Tough Times: Find encouragement and hope</li> <li>Faith Communities: Share spiritual experiences and miracles</li> <li>Anyone Seeking Positivity: Escape from negative social media</li> <li>Those with Social Media Anxiety: Experience sharing without stress</li> <li>People Wanting to Encourage Others: Spread hope and faith</li> <li>Individuals Seeking Authentic Connection: Focus on meaningful content</li> </ul>"},{"location":"portfolio/sharacle/#community-guidelines","title":"Community Guidelines","text":"<ul> <li>Share Miracles: Focus on positive, faith-building experiences</li> <li>Be Encouraging: Support others in their spiritual journey</li> <li>Respect Privacy: Honor others' experiences and beliefs</li> <li>Stay Positive: Maintain an uplifting environment</li> <li>No Judgment: Accept all miracle stories with open hearts</li> </ul>"},{"location":"portfolio/sharacle/#website","title":"Website","text":"<p>Live Platform</p> <p>Visit sharacle.com to experience anxiety-free miracle sharing.</p>"},{"location":"portfolio/sharacle/#impact-vision","title":"Impact Vision","text":"<p>Sharacle aims to be a beacon of hope in the digital world, providing a safe space where people can share their miracles without the anxiety that typically comes with social media. By removing comparison, judgment, and popularity pressures, we create an environment where faith can flourish and people can find encouragement during their darkest times.</p>"},{"location":"portfolio/typing-contest-bot/","title":"Typing Contest Discord Bot","text":"<p>This is a Discord bot built with <code>discord.py</code> to facilitate typing contests in a server. The bot enables users to start contests, join them, submit WPM (words per minute) results, and display rankings based on average WPM.</p>"},{"location":"portfolio/typing-contest-bot/#prerequisties","title":"Prerequisties","text":"<ul> <li>Python 3.11+</li> <li>Poetry (recommended) or pip</li> </ul>"},{"location":"portfolio/typing-contest-bot/#installation","title":"Installation","text":""},{"location":"portfolio/typing-contest-bot/#1-clone-the-repository","title":"1. Clone the repository:","text":"<pre><code>git clone https://github.com/your-username/typing-contest-bot.git\ncd typing-contest-bot\n</code></pre>"},{"location":"portfolio/typing-contest-bot/#2-install-dependencies","title":"2. Install dependencies:","text":""},{"location":"portfolio/typing-contest-bot/#using-poetry-recommended","title":"Using Poetry (recommended)","text":"<p>If you haven't installed Poetry yet, use the following command:</p> <pre><code>curl -sSL https://install.python-poetry.org | python3 -\n</code></pre> <p>Then, install all dependencies by running:</p> <pre><code>poetry install\n</code></pre> <p>Activate the virtual environment:</p> <pre><code>poetry shell\n</code></pre>"},{"location":"portfolio/typing-contest-bot/#using-pip","title":"Using pip","text":"<p>Create and activate a virtual environment:</p> <pre><code>python -m venv venv\nsource venv/bin/activate # On Windows use `venv\\Scripts\\activate`\n</code></pre> <p>Then, to install all dependencies, run:</p> <pre><code>pip install -r requirements.txt\n</code></pre>"},{"location":"portfolio/typing-contest-bot/#3-configure-the-bot","title":"3. Configure the bot:","text":"<p>Create a <code>config.json</code> file in the <code>./config/</code> directory with the following structure:</p> <pre><code>{\n  \"token\": \"your-discord-bot-token\",\n  \"typist_role_name\": \"your-server-typist-role\",\n  \"testing_role_name\": \"your-server-testing-role\", // Optional, required only for debug mode\n  \"contests_held\": 0\n}\n</code></pre>"},{"location":"portfolio/typing-contest-bot/#4-run-the-bot","title":"4. Run the bot:","text":"<p>To start the bot, run:</p> <pre><code>python main.py # Or `poetry run python main.py` if using Poetry\n</code></pre>"},{"location":"portfolio/typing-contest-bot/#commands","title":"Commands","text":"<ul> <li><code>!start</code>: Start a typing contest in the current channel.</li> <li><code>!end</code>: End the current typing contest.</li> <li><code>!status</code>: Check the status of the typing contest.</li> <li><code>!join</code>: Join the typing contest.</li> <li><code>!quit</code>: Quit the typing contest.</li> <li><code>!list</code>: Display all current participants in the typing contest.</li> <li><code>!next</code>: Proceed to the next round in the typing contest and view the current   WPM results.</li> <li><code>!wpm {wpm}</code>: Submit your WPM result for the current round.</li> <li><code>!result</code>: View the WPM results table at any time, not just after advancing   rounds.</li> <li><code>!remind</code>: Sends a reminder to participants who haven't submitted their WPM   for the current round. Use this if the round has ended and some participants   have not yet submitted their results.</li> <li><code>!remove {member}</code>: Remove a participant from the typing contest. Only the   contest creator can use this.</li> <li><code>!ban {member}</code>: Ban a participant from the typing contest. Once banned, they   cannot join again. Only the contest creator can use this.</li> <li><code>!getrole</code>: Assign yourself the typist role.</li> <li><code>!commands</code>: Show this list of commands.</li> </ul>"},{"location":"portfolio/typing-contest-bot/#contributing","title":"Contributing","text":"<p>Please see the CONTRIBUTING.md for guidelines on contributing to this project.</p>"},{"location":"portfolio/typing-contest-bot/#license","title":"LicenseHappy Typing and Good Luck!","text":"<p>This project is licensed under the GNU General Public License v3.0 (GPL-3.0). See the <code>LICENSE</code> file for details.</p>"},{"location":"blog/archive/2024/","title":"2024","text":""},{"location":"blog/category/devops/","title":"DevOps","text":""},{"location":"blog/category/general/","title":"General","text":""}]}